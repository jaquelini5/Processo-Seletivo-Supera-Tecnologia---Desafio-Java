//DESAFIO 3
import java.util.ArrayList;
import java.util.List;

public class Snail {
    public static List<Integer> snail(int[][] array) {
        List<Integer> result = new ArrayList<>();
        if (array.length == 0 || array[0].length == 0) {
            return result;
        }

        int top = 0;
        int bottom = array.length - 1;
        int left = 0;
        int right = array[0].length - 1;

        while (top <= bottom && left <= right) {
            // Percorre o topo
            for (int i = left; i <= right; i++) {
                result.add(array[top][i]);
            }
            top++;

            // Percorre o lado direito
            for (int i = top; i <= bottom; i++) {
                result.add(array[i][right]);
            }
            right--;

            if (top <= bottom) {
                // Percorre o fundo
                for (int i = right; i >= left; i--) {
                    result.add(array[bottom][i]);
                }
                bottom--;
            }

            if (left <= right) {
                // Percorre o lado esquerdo
                for (int i = bottom; i >= top; i--) {
                    result.add(array[i][left]);
                }
                left++;
            }
        }

        return result;
    }

    public static void main(String[] args) {
        int[][] array = {
            {1, 2, 3},
            {4, 5, 6},
            {7, 8, 9}
        };

        System.out.println(snail(array)); // SaÃ­da esperada: [1, 2, 3, 6, 9, 8, 7, 4, 5]
    }
}
